pipeline{
   agent any 

 //     environment {
 //         withAWS(credentials: 'anderson', region: 'us-east-1')
 // }
 
    stages {
 		stage('Install tools') {
 			steps {
                 dir("/var/lib/jenkins/workspace/") { 
                    sh 'cat /etc/*release'
                    sh 'yum update -y'
                    sh 'yum upgrade -y'
                    sh 'yum install wget unzip -y'
                    sh 'rm -f terraform_1.1.2_linux_amd64.zip'
                    sh 'wget https://releases.hashicorp.com/terraform/1.1.2/terraform_1.1.2_linux_amd64.zip'
                    sh 'unzip terraform_1.1.2_linux_amd64.zip'
                    sh 'mv terraform /usr/bin/'
                    sh 'terraform -v'
					sh 'ls'
                }
			}
		}
		stage('TF-Plan-Beanstalk'){
		    steps{
				dir("/var/lib/jenkins/workspace/tf-developer-associate/beanstalk/"){
                    echo '--- plan beanstalk'
					sh 'ls'
					sh 'pwd'
                    sh "terraform init"
                    sh "terraform plan"
				}
 		    }
		}
				stage('TF-Plan-Codebuild'){
		    steps{
				dir("/var/lib/jenkins/workspace/tf-developer-associate/codebuild/"){
                    echo '--- plan codebuild'
					sh 'ls'
					sh 'pwd'
                    sh "terraform init"
                    sh "terraform plan"
				}
 		    }
		}
				stage('TF-Plan'){
		    steps{
				dir("/var/lib/jenkins/workspace/tf-developer-associate/codepipeline/"){
                    echo '--- plan codepipeline'
					sh 'ls'
					sh 'pwd'
                    sh "terraform init"
                    sh "terraform plan"
				}
 		    }
		}
 		stage('Confirm Plan?'){
 		    steps{
                 timeout(time: 2, unit: 'HOURS') {
                     input 'Prosseguir com a Execução?'
                 }
 		    }
 		}		
		stage('TF-Create-Beanstalk'){
		    steps{
				dir("/var/lib/jenkins/workspace/tf-developer-associate/beanstalk/"){
                    echo '--- create beanstalk'
				    sh "terraform init"
                    sh "terraform apply --auto-approve"
				}
		    }
		}
		stage('TF-Create-Codebuild'){
		    steps{
				dir("/var/lib/jenkins/workspacetf-developer-associate/codebuild/"){
                    echo '--- create codebuild'
                    sh "terraform init"
                    sh "terraform apply --auto-approve"
				}
		    }
		}
		stage('TF-Create-Codepipeline'){
		    steps{
				dir("/var/lib/jenkins/workspace/tf-developer-associate/codepipeline/"){
                    echo '--- create codepipeline'
                    sh "terraform init"
                    sh "terraform apply --auto-approve"
				}
		    }
		}
	}
}
