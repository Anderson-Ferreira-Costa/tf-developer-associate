pipeline{
   agent any 

 //     environment {
 //         withAWS(credentials: 'anderson', region: 'us-east-1')
 // }
    stages {
		stage('TF-Plan-Beanstalk'){
		    steps{
				dir("/var/lib/jenkins/workspace/jenkins-tf-developer-associate/beanstalk/"){
                    echo '--- plan beanstalk'
					sh 'ls'
					sh 'pwd'
                    sh "terraform init"
                    sh "terraform plan"
				}
 		    }
		}
				stage('TF-Plan-Codebuild'){
		    steps{
				dir("/var/lib/jenkins/workspace/jenkins-tf-developer-associate/codebuild/"){
                    echo '--- plan codebuild'
					sh 'ls'
					sh 'pwd'
                    sh "terraform init"
                    sh "terraform plan"
				}
 		    }
		}
				stage('TF-Plan'){
		    steps{
				dir("/var/lib/jenkins/workspace/jenkins-tf-developer-associate/codepipeline/"){
                    echo '--- plan codepipeline'
					sh 'ls'
					sh 'pwd'
                    sh "terraform init"
                    sh "terraform plan"
				}
 		    }
		}
 		stage('Confirm Plan?'){
 		    steps{
                 timeout(time: 2, unit: 'HOURS') {
                     input 'Prosseguir com a Execução?'
                 }
 		    }
 		}		
		stage('TF-Create-Beanstalk'){
		    steps{
				dir("/var/lib/jenkins/workspace/jenkins-tf-developer-associate/beanstalk/"){
                    echo '--- create beanstalk'
				    sh "terraform init"
                    sh "terraform apply --auto-approve"
				}
		    }
		}
		stage('TF-Create-Codebuild'){
		    steps{
				dir("/var/lib/jenkins/workspacejenkins-tf-developer-associate/codebuild/"){
                    echo '--- create codebuild'
                    sh "terraform init"
                    sh "terraform apply --auto-approve"
				}
		    }
		}
		stage('TF-Create-Codepipeline'){
		    steps{
				dir("/var/lib/jenkins/workspace/jenkins-tf-developer-associate/codepipeline/"){
                    echo '--- create codepipeline'
                    sh "terraform init"
                    sh "terraform apply --auto-approve"
				}
		    }
		}
	}
}
